name: "build"
on:
  pull_request:
  # push:
  #   branches:
  #     - main

# This is the example from the readme.
# On each push to the `main` branch it will create or update a GitHub build, build your app, and upload the artifacts to the build.

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-20.04
          - os: windows-latest

    runs-on: ${{ matrix.os }}
    steps:
      - name: "Setup actions/checkout"
        uses: actions/checkout@v4

      - name: "Setup rust"
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - if: matrix.target
        run: rustup target add ${{ matrix.target }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      # setup dependencies
      - name: install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl wget file libssl-dev libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev  patchelf

      # install llvm (for llvm-copy) on macos only. For cpp runtimes.
      - name: Install LLVM
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install llvm@17
          echo "$(brew --prefix llvm@17)/bin" >> $GITHUB_PATH

      - name: Install GUI frontend dependencies
        run: cd edgen && pnpm install # change this to npm or pnpm depending on which one you use

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          RUSTFLAGS: "--cfg tokio_unstable"
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          projectPath: ./edgen
          args: ${{ matrix.target && format('--target {0}', matrix.target) }}
